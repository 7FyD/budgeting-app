// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String  @id @default(cuid())
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  budgetId        Int?
  budget UserBudget?
  accounts Account[]
}


// model User { 
//   id Int @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt       DateTime @updatedAt
//   email String? @unique
//   name String? @db.VarChar(20)
//   hashedPassword String @db.VarChar()


//   account Account?


// }

model Account {
  id                Int @id @default(autoincrement())
  userId            String @unique
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model UserBudget {
  id Int @id @default(autoincrement())
  monthlyIncome Decimal
  rentAndUtilities Decimal
  userId String @unique
  user User @relation(fields: [userId], references: [id])
  
  categories Category[] 

}

model Category {
  id Int @id @default(autoincrement())
  name String
  userBudgetId Int
  budget UserBudget @relation(fields: [userBudgetId], references: [id])
  
  expenses Expense[] 
}

model Expense {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  amount Decimal  
  date DateTime?
  description String?


  // Reference the category associated with this expense
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id])

}